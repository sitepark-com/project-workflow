name: Composer Verify

on:
  workflow_call:
    inputs:
      phpVersion:
        default: '8.3'
        type: string

env:
  COMPOSER_HOME: ${{ github.workspace }}/.composer
jobs:
  verify:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'ci(release):') }}

    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: "Cache tools installed with PHIVE"
        uses: "actions/cache@v3"
        with:
          path: "${{ runner.temp }}/.phive"
          key: "php-phive-${{ hashFiles('.phive/phars.xml') }}"
          restore-keys: "php-phive-"

      - name: "Install PHIVE"
        uses: "szepeviktor/phive@v1"
        with:
          home: "${{ runner.temp }}/.phive"
          binPath: "/usr/local/bin/phive"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        env:
          PHIVE_HOME: "${{ runner.temp }}/.phive"
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock', '**/composer.json') }}

      - name: Composer validate
        uses: php-actions/composer@v6
        with:
          php_version: ${{ inputs.phpVersion }}
          command: validate
  
      - name: Composer allow plugin sitepark/composer-project
        uses: php-actions/composer@v6
        with:
          php_version: ${{ inputs.phpVersion }}
          command: --no-interaction global config --no-plugins allow-plugins.sitepark/composer-project true

      - name : test
        run: |
          ls -la .
          ls -la .composer
          cat .composer/composer.json

      - name: Composer add sitepark/composer-project
        uses: php-actions/composer@v6
        with:
          php_version: ${{ inputs.phpVersion }}
          command: --no-interaction global require --dev sitepark/composer-project:dev-main

      - name : test
        run: |
          ls -la .
          ls -la .composer
          cat .composer/composer.json
  
      - name: Composer install (no scripts)
        uses: php-actions/composer@v6
        with:
          php_version: ${{ inputs.phpVersion }}
          args: --no-scripts -vvv # if composer.lock exists phive would not be found
        env:
          PHIVE_HOME: "${{ runner.temp }}/.phive"

      # composer install is already executed by php-actions/composer@v6 but in composer.json post-install-cmd can be defined.
      # But these are only executed if a composer.lock exists.
      # See https://getcomposer.org/doc/articles/scripts.md#command-events
      # For libraries the composer.lock is not checked in and is not present at the first composer install call.
      # Then only with the second composer install call also the post-install-cmd are executed.
      - name: Composer install (with scripts)
        uses: php-actions/composer@v6
        with:
          php_version: ${{ inputs.phpVersion }}
        env:
          PHIVE_HOME: "${{ runner.temp }}/.phive"
    
      - name: phpstan
        run: tools/phpstan analyse --memory-limit=512M --no-progress --no-interaction || true
    
      - name: phpcs
        run: |
          if [ -f tools/phpcs ]; then
              PHPCS_BIN=tools/phpcs
          elif [ -f vendor/bin/phpcs ]; then
              PHPCS_BIN=vendor/bin/phpcs
          else
              echo "phpcs not found"
              exit 1
          fi
          $PHPCS_BIN --colors --report=full
  
      - name: phpcs_compatibilitycheck
        run: |
          if [ -f tools/phpcs ]; then
          PHPCS_BIN=tools/phpcs
          elif [ -f vendor/bin/phpcs ]; then
              PHPCS_BIN=vendor/bin/phpcs
          else
              echo "phpcs not found"
              exit 1
          fi
          $PHPCS_BIN --standard=./phpcs.compatibilitycheck.xml --colors --report=full
  
      - name: phplint
        run: tools/phplint --no-progress
  
      - name: phpunit
        run: |
          export XDEBUG_MODE=coverage
          tools/phpunit.phar -c phpunit.xml --log-junit var/log/phpunit-test-report.xml --coverage-cobertura phpunit-coverage.xml --coverage-text --colors=never
  
      - name: composer_audit
        run: composer audit
  
      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODE_COV_TOKEN }}
          files: ./var/log/clover/clover.xml
          verbose: true
  